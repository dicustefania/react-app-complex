version: '3'
services:
  postgres:                        #advanced, enterprise class open source relational database that supports both SQL (relational) and JSON (non-relational) querying.
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: './server'
    volumes:
      - /app/node_modules            # don't try to overwrite this directory from the container
      - ./server:/app                # server folder is mapped to /app from the container ( if we modify from /server, we'll see the modif in /app also)
    environment:
      - REDIS_HOST=redis             #the name of the container
      - REDIS_PORT=6379              # from the doc ( default values)
      - PGUSER=postgres              # from the doc ( default values)
      - PGHOST=postgres             #the name of the container
      - PGDATABASE=postgres         # from the doc ( default values)
      - PGPASSWORD=postgres_password  # from the doc ( default values)
      - PGPORT=5432                    # from the doc ( default values)
  client:
    build:
      dockerfile: Dockerfile.dev
      context: './client'
    volumes:
      - /app/node_modules            # don't try to overwrite this directory from the container
      - ./client:/app
  worker:       
    build:
      dockerfile: Dockerfile.dev
      context: './worker'
    environment:
      - REDIS_HOST=redis             #the name of the container
      - REDIS_PORT=6379              # from the doc ( default values)
    volumes:
      - /app/node_modules            # don't try to overwrite this directory from the container
      - ./worker:/app
  nginx:
    restart: 'always'
    build:
      dockerfile: Dockerfile.dev
      context: './nginx'
    ports:
      - '3050:80'
    depends_on:
      - api
      - client